#N canvas 851 56 800 872 12;
#X msg 107 574 shape 2 3;
#X msg 124 606 clear;
#X obj 474 789 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 144 710 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 85 787 route tensor shape;
#X obj 85 835 print tensor;
#X obj 146 811 print shape;
#X msg 85 544 1.81502 1.00338 1;
#X obj 85 761 torch.ls2tensor data -shape 20 21 -t 2 -shuffle -mout -v;
#X msg 132 638 load resources/data/20-mfcc-data.txt;
#X obj -3 31 cnv 3 800 3 empty empty description 12 12 0 14 #7c7c7c #404040 0;
#X obj -3 90 cnv 3 800 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 79 95 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj -3 213 cnv 3 800 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 79 227 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj -3 507 cnv 3 800 3 empty empty example 8 12 0 13 #dcdcdc #000000 0;
#X obj -3 3 cnv 3 800 3 empty empty torch.ls2tensor 14 14 1 22 #7c7c7c #404040 0;
#X text 736 12 v.0.1.0;
#X text 657 70 tested on pd-0.56-1;
#X text 29 55 accumulates incoming data or loads a text file to create a tensor with a specific shape, f 66;
#X text 108 95 incoming data: [float];
#X text 276 94 float and/or list of floats;
#X text 109 114 shape: [list];
#X text 277 114 shape of the tensor;
#X text 110 134 clear: [message];
#X text 110 153 load: [message];
#X text 112 190 bang: [bang];
#X text 101 227 list:;
#X text 142 229 tensor: outputs the tensor created;
#X text 143 248 shape: outputs the shape of the tensor;
#X obj -3 298 cnv 3 800 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj -4 399 cnv 3 800 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 96 405 -shuffle: shuffles the dataset examples to prepare the tensor for machine learning tasks, f 73;
#X text 96 445 -multioutput: sets the multi-output mode to output each tensor dimension sequentially (if the flag is not set \, the tensor will be output in its flattened form), f 86;
#X text 97 486 -verbose: enable verbose logging printings;
#X text 96 305 -name: sets tensor name so that other objects can receive the tensor created by a specific instance of torch.ls2tensor, f 91;
#X text 96 340 -shape: tensor shape;
#X text 97 364 -target: sets the label dimensions of the tensor (used to create datasets for machine learning tasks, f 78;
#X text 110 171 save: [message];
#X text 279 171 saves the created tensor into a text file;
#X obj 81 273 cnv 18 3 17 empty empty 1 5 9 0 14 #dcdcdc #9c9c9c 0;
#X text 103 273 bang:;
#X text 146 274 bang when the tensor is filled;
#X msg 139 676 save resources/data/tensor.txt;
#X text 277 153 loads a text file with data and create a tensor with the shape specfied, f 72;
#X text 171 613 clears the tensor content;
#X text 277 134 clears the tensor content;
#X text 359 681 saves the tensor into a text file;
#X text 394 648 loads a text file;
#X text 213 550 incoming data to accumulate;
#X text 279 191 outputs the tensor created if it is filled;
#X text 168 710 outputs the tensor if it is full;
#X text 497 790 bang when the tensor is filled;
#X text 183 580 set the tensor shape;
#N canvas 294 25 1183 557 (subpatch) 0;
#X obj 385 43 pdcontrol;
#X obj 13 8 inlet;
#X msg 14 40 browse https://github.com/ecrisufmg/contorchionist;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X coords 0 -1 1 1 4 2 2 1 1;
#X restore 691 58 pd;
#X msg 691 42 conTorchinist;
#X connect 0 0 8 0;
#X connect 1 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 7 0 8 0;
#X connect 8 0 4 0;
#X connect 8 1 2 0;
#X connect 9 0 8 0;
#X connect 43 0 8 0;
#X connect 55 0 54 0;
