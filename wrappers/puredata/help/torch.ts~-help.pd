#N canvas 873 63 890 824 12;
#X obj 459 711 print~;
#X obj 550 712 print~;
#X obj 641 713 print~;
#X obj 731 709 print~;
#X obj 476 682 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 571 678 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 665 680 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 762 680 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X floatatom 459 564 5 0 0 0 - - - 0;
#X obj 459 586 osc~ 440;
#X obj 729 584 osc~ 440;
#X floatatom 729 562 5 0 0 0 - - - 0;
#X obj 461 274 snake~ in 2;
#X obj 461 327 snake~ out 4, f 39;
#X obj 461 430 print~;
#X obj 551 431 print~;
#X obj 641 432 print~;
#X obj 730 428 print~;
#X obj 503 383 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 582 377 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 673 373 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 752 364 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X floatatom 461 223 5 0 0 0 - - - 0;
#X obj 461 248 osc~ 440;
#X obj 535 248 osc~ 440;
#X floatatom 535 221 5 0 0 0 - - - 0;
#X obj 40 308 snake~ out 2;
#X obj 40 394 print~;
#X obj 121 395 print~;
#X obj 91 347 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 153 341 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X floatatom 40 235 5 0 0 0 - - - 0;
#X obj 40 260 osc~ 440;
#X obj 35 604 snake~ in 4, f 41;
#X floatatom 35 556 5 0 0 0 - - - 0;
#X obj 35 578 osc~ 440;
#X floatatom 129 557 5 0 0 0 - - - 0;
#X floatatom 224 557 5 0 0 0 - - - 0;
#X floatatom 319 558 5 0 0 0 - - - 0;
#X text 455 498 without multi-channel mode \, the object creates an inlet for each input channel and an outlet for each output channel according to the selected method., f 49;
#X text 34 198 the forward method of the dummy model copies the input channel to each output channel, f 45;
#X text 456 181 the method_2to_4 duplicates the two input channels and copy each one to a different output channel, f 52;
#X text 30 504 the method_4to_1 calculates the average of the 4 input channels and send the resulting signal to the output channel, f 46;
#X text 249 141 Simple example of loading a dummy model with 3 different methods, f 64;
#X obj 129 579 osc~ 580;
#X obj 224 579 osc~ 234;
#X obj 319 580 osc~ 745;
#X obj 35 676 output~;
#X text 338 9 torch.ts~;
#X text 12 54 creation arguments: model name \, -method or -m: method name (default: forward) -mc: multi-channel mode \, -async: asynchronous processing mode \, -device or -d: device (cpu \, cuda or mps) \, -v: verbose mode;
#X obj 40 282 torch.ts~ RouteSignal.ts -m forward -mc;
#X obj 461 299 torch.ts~ RouteSignal.ts -m method_2to4 -mc;
#X obj 35 633 torch.ts~ RouteSignal.ts -m method_4to1 -async 1024 -mc -v, f 42;
#X obj 459 610 torch.ts~ RouteSignal.ts -m method_2to4;
#X connect 4 0 0 0;
#X connect 5 0 1 0;
#X connect 6 0 2 0;
#X connect 7 0 3 0;
#X connect 8 0 9 0;
#X connect 9 0 53 0;
#X connect 10 0 53 1;
#X connect 11 0 10 0;
#X connect 12 0 51 0;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 13 2 16 0;
#X connect 13 3 17 0;
#X connect 18 0 14 0;
#X connect 19 0 15 0;
#X connect 20 0 16 0;
#X connect 21 0 17 0;
#X connect 22 0 23 0;
#X connect 23 0 12 0;
#X connect 24 0 12 1;
#X connect 25 0 24 0;
#X connect 26 0 27 0;
#X connect 26 1 28 0;
#X connect 29 0 27 0;
#X connect 30 0 28 0;
#X connect 31 0 32 0;
#X connect 32 0 50 0;
#X connect 33 0 52 0;
#X connect 34 0 35 0;
#X connect 35 0 33 0;
#X connect 36 0 44 0;
#X connect 37 0 45 0;
#X connect 38 0 46 0;
#X connect 44 0 33 1;
#X connect 45 0 33 2;
#X connect 46 0 33 3;
#X connect 50 0 26 0;
#X connect 51 0 13 0;
#X connect 52 0 47 0;
#X connect 53 0 0 0;
#X connect 53 1 1 0;
#X connect 53 2 2 0;
#X connect 53 3 3 0;
